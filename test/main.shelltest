#!/usr/bin/env shelltest
#
# These tests are run using `shelltestrunner`.
# https://github.com/simonmichael/shelltestrunner
#
# You will have a much nicer time if you run these tests via Make:
#
#     $ make test
# or:
#     $ make test-shelltest
#
# If you need to run these tests directly, then do so the same way that the
# Makefile does: from the root directory of the project:
#
#     $ shelltest test/main.shelltest

# When no subcommand is given, an error message describes valid subcommands.
$ test/build/projectionist
> /^Valid subcommands: alternate/
>=1

# The main program is built and cannot find a .projections.json file.
$ test/build/projectionist alternate
> /^No projections in:/
>=1

# A .projections.json file is available, but no files were given.
$ test/build/projectionist alternate --config test/projections.test.json
> /^No files given./
>=1

# A .projections.json file is found and a file alternate is calculated.
$ test/build/projectionist alternate --config test/projections.test.json my_file.rb
> /^my_file_alternate.rb/
>=0

# A .projections.json file is found and a file alternate is calculated with
#   the file argument before the config flag.
$ test/build/projectionist alternate my_file.rb --config test/projections.test.json
> /^my_file_alternate.rb/
>=0

# A .projections.json file is found, but the given file doesn't have alternate
#   configuration.
$ test/build/projectionist alternate my_file.txt --config test/projections.test.json
> /^No alternate found for 'my_file.txt'/
>=1
